<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Integrators on Mjolnir documentation</title><link>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/integrators/</link><description>Recent content in Integrators on Mjolnir documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/integrators/index.xml" rel="self" type="application/rss+xml"/><item><title>BAOABLangevin</title><link>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/integrators/BAOABLangevinIntegrator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/integrators/BAOABLangevinIntegrator/</guid><description>BAOABLangevin # ランジュバン方程式に従い、温度・体積・粒子数 (NVT) 一定のシミュレーションを行います。
\[m\frac{d^2 \bold{r}}{dt^2} = \bold{f}(\bold{r}) - m\gamma\bold{v} &amp;#43; \beta(t)\] 以下の論文で提案された手法です。
Benedict Leimkuhler and Charles Matthews. Appl. Math. Res. Exp. (2013) 2013:1, pp. 34-56 Benedict Leimkuhler and Charles Matthews. J. Chem. Phys. (2013) 138:17, 174102 例 # [simulator] integrator.type = &amp;#34;BAOABLangevin&amp;#34; integrator.gammas = [ {index = 0, gamma = 1.0}, {index = 1, gamma = 1.0}, # .</description></item><item><title>g-BAOABLangevin</title><link>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/integrators/gBAOABLangevinIntegrator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/integrators/gBAOABLangevinIntegrator/</guid><description>g-BAOABLangevin # ランジュバン方程式に従い、温度・体積・粒子数 (NVT) 一定のシミュレーションを行います。
BAOABLangevinと異なり、結合長に対する拘束条件を取り扱うことができます。
以下の論文で提案された手法です。
Leimkuhler B, Matthews C. Proc. R. Soc. A. (2016) 例 # [simulator] # ... integrator.type = &amp;#34;g-BAOABLangevin&amp;#34; integrator.gammas = [ {index = 0, gamma = 1.0}, {index = 1, gamma = 1.0}, # ... ] 入力 # delta_tなどの他のパラメータはSimulatorで設定します。
type: 文字列型 Integratorの種類を指定します。&amp;quot;g-BAOABLangevin&amp;quot;です。 gammas: テーブルの配列型 粒子の摩擦係数 \(\gamma_i\) を指定します。 remove: テーブル型 (optional) translation: 論理値型 trueの場合、毎ステップ、系全体の並進速度成分を取り除きます。 rotation: 論理値型 trueの場合、毎ステップ、系全体の回転速度成分を取り除きます。 rescale: 論理値型 trueになっていた場合、全体の速度ベクトルをリスケールすることで速度を減算した分の運動エネルギーを補填します。 省略した場合、全てfalseになります。 Remarks # This feature is developed by contributor, @yutakasi634.</description></item><item><title>G-JFLangevin</title><link>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/integrators/G-JFLangevinIntegrator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/integrators/G-JFLangevinIntegrator/</guid><description>G-JFLangevin # ランジュバン方程式に従い、温度・体積・粒子数 (NVT) 一定のシミュレーションを行います。
\[m\frac{d^2 \bold{r}}{dt^2} = \bold{f}(\bold{r}) - \alpha\bold{v} &amp;#43; \beta(t)\] 以下の論文で提案された手法です。
Niels Grønbech-Jensen &amp;amp; Oded Farago, (2013) Mol.Phys. 111:8, 983-991 例 # [simulator] # ... integrator.type = &amp;#34;G-JFLangevin&amp;#34; integrator.alphas = [ {index = 0, alpha = 1.0}, {index = 1, alpha = 1.0}, # ... ] 入力 # delta_tなどの他のパラメータはSimulatorで設定します。
type: 文字列型 Integratorの種類を指定します。&amp;quot;G-JFLangevin&amp;quot;です。 alphas: テーブルの配列型 粒子の摩擦係数 \(\alpha_i\) を指定します。 remove: テーブル型 (optional) translation: 論理値型 trueの場合、毎ステップ、系全体の並進速度成分を取り除きます。 rotation: 論理値型 trueの場合、毎ステップ、系全体の回転速度成分を取り除きます。 rescale: 論理値型 trueになっていた場合、全体の速度ベクトルをリスケールすることで速度を減算した分の運動エネルギーを補填します。 省略した場合、全てfalseになります。</description></item><item><title>GFWNPTLangevin</title><link>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/integrators/GFWNPTLangevinIntegrator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/integrators/GFWNPTLangevinIntegrator/</guid><description>GFWNPTLangevin # ランジュバン方程式に従い、温度・圧力・粒子数 (NPT) 一定のシミュレーションを行います。
\[m\frac{d^2 \bold{r}}{dt^2} = \bold{f}(\bold{r}) - m\gamma\bold{v} &amp;#43; \beta(t)\] 以下の論文で提案された手法です。
Xingyu Gao, Jun Fang, and Han Wang. J. Chem. Phys. (2016) 144, 124113 例 # [simulator] # ... integrator.type = &amp;#34;GFWNPTLangevin&amp;#34; integrator.chi = 0.0 integrator.cell_mass = [1e3, 1e3, 1e3] integrator.cell_gamma = [0.1, 0.1, 0.1] integrator.gammas = [ {index = 0, gamma = 0.1}, {index = 1, gamma = 0.</description></item><item><title>UnderdampedLangevin</title><link>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/integrators/UnderdampedLangevinIntegrator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/integrators/UnderdampedLangevinIntegrator/</guid><description>UnderdampedLangevin # ランジュバン方程式に従い、温度・体積・粒子数一定のシミュレーションを行います。
\[m\frac{d^2 \bold{r}}{dt^2} = \bold{f}(\bold{r}) - m\gamma\bold{v} &amp;#43; \beta(t)\] 以下の論文で提案された手法です。
J. D. Honeycutt and D. Thirumalai, (1992) Biopolymers Z. Guo and D. Thirumalai, (1995) Biopolymers. 例 # [simulator] integrator.type = &amp;#34;UnderdampedLangevin&amp;#34; integrator.gammas = [ {index = 0, gamma = 1.0}, {index = 1, gamma = 1.0}, # ... ] 入力 # delta_tなどの他のパラメータはSimulatorで設定します。
type: 文字列型 Integratorの種類を指定します。&amp;quot;BAOABLangevin&amp;quot;です。 gammas: テーブルの配列型 粒子の摩擦係数 \(\gamma_i\) を指定します。 remove: テーブル型 (optional) translation: 論理値型 trueの場合、毎ステップ、系全体の並進速度成分を取り除きます。 rotation: 論理値型 trueの場合、毎ステップ、系全体の回転速度成分を取り除きます。 rescale: 論理値型 trueになっていた場合、全体の速度ベクトルをリスケールすることで速度を減算した分の運動エネルギーを補填します。 省略した場合、全てfalseになります。</description></item><item><title>VelocityVerlet</title><link>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/integrators/VelocityVerletIntegrator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/integrators/VelocityVerletIntegrator/</guid><description>VelocityVerlet # ニュートンの運動方程式に従い、エネルギー・体積・粒子数一定のシミュレーションを行います。
例 # [simulator] integrator.type = &amp;#34;VelocityVerlet&amp;#34; integrator.remove.translation = true integrator.remove.rotation = true integrator.remove.rescale = true 入力 # delta_tなどの他のパラメータは[simulator]で設定します。
type: 文字列型 Integratorの種類を指定します。&amp;quot;VelocityVerlet&amp;quot;です。 remove: テーブル型 (optional) translation: 論理値型 trueの場合、毎ステップ、系全体の並進速度成分を取り除きます。 rotation: 論理値型 trueの場合、毎ステップ、系全体の回転速度成分を取り除きます。 rescale: 論理値型 trueになっていた場合、全体の速度ベクトルをリスケールすることで速度を減算した分の運動エネルギーを補填します。 省略した場合、全てfalseになります。</description></item></channel></rss>