<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Simulators on Mjolnir documentation</title><link>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/simulators/</link><description>Recent content in Simulators on Mjolnir documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/simulators/index.xml" rel="self" type="application/rss+xml"/><item><title>MolecularDynamics</title><link>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/simulators/MolecularDynamicsSimulator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/simulators/MolecularDynamicsSimulator/</guid><description>MolecularDynamics # 通常の分子動力学シミュレーションを行うシミュレータです。
systemを一つ、forcefieldを一つ要求します。
Example # [simulator] type = &amp;#34;MolecularDynamics&amp;#34; boundary_type = &amp;#34;PeriodicCuboid&amp;#34; precision = &amp;#34;double&amp;#34; parallelism = &amp;#34;OpenMP&amp;#34; # optional seed = 12345 delta_t = 0.1 total_step = 50_000 save_step = 100 integrator.type = &amp;#34;VelocityVerlet&amp;#34; Input Reference # type: 文字列型 シミュレータの種類を指定します。このシミュレータを使う場合、&amp;quot;MolecularDynamics&amp;quot;です。 boundary_type: 文字列型 境界条件の種類を指定します。具体的な大きさは[[systems]]で指定します。 &amp;quot;Unlimited&amp;quot;: 境界条件を設定しません。シミュレーションボックスは無限大の大きさになります。 &amp;quot;PeriodicCuboid&amp;quot;: 直方体型の周期境界条件を指定します。 precision: 文字列型 シミュレーションに用いる浮動小数点数型の種類を指定します。 &amp;quot;float&amp;quot;: 32bit浮動小数点数を使用します。 &amp;quot;double&amp;quot;: 64bit浮動小数点数を使用します。 parallelism: 文字列型(省略可。デフォルトで並列化なし) 並列化する際の実装を選択します。 &amp;quot;OpenMP&amp;quot;: OpenMPを使った実装を使用します。 &amp;quot;sequencial&amp;quot;: 並列化を行いません。省略した場合はこれが選択されます。 seed: 整数型 乱数生成器の初期化に用いるシードを設定します。 delta_t: 浮動小数点数型 シミュレーションの時間刻みを指定します。 時間の単位は[units]で指定した単位系に依存します。 total_step: 整数型 実行するステップ数を指定します。 save_step: 整数型 何ステップおきに状態を出力するか指定します。 integrator: テーブル型 時間積分の方法を指定します。積分方法によって必要なパラメータが異なります。 以下のアルゴリズムが使用可能です。 &amp;ldquo;BAOABLangevin&amp;rdquo; &amp;ldquo;g-BAOABLangevin&amp;rdquo; &amp;ldquo;UnderdampedLangevin&amp;rdquo; &amp;ldquo;VelocityVerlet&amp;rdquo; 参考：integrators.</description></item><item><title>SimulatedAnnealing</title><link>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/simulators/SimulatedAnnealingSimulator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/simulators/SimulatedAnnealingSimulator/</guid><description>SimulatedAnnealing # 焼きなまし（Simulated Annealing）法のためのシミュレータです。
systemを一つ、forcefieldを一つ要求します。
Example # [simulator] type = &amp;#34;SimulatedAnnealing&amp;#34; boundary_type = &amp;#34;Unlimited&amp;#34; precision = &amp;#34;double&amp;#34; parallelism = &amp;#34;OpenMP&amp;#34; # optional delta_t = 0.1 total_step = 50_000 save_step = 100 each_step = 100 schedule.type = &amp;#34;linear&amp;#34; schedule.begin = 300.0 # temperature in [K] schedule.end = 150.0 # temperature in [K] integrator.type = &amp;#34;UnderdampedLangevin&amp;#34; integrator.parameters = [ # ... ] Input Reference # type: 文字列型 シミュレータの種類を指定します。このシミュレータを使う場合、&amp;quot;SimulatedAnnealing&amp;quot;です。 boundary_type: 文字列型 境界条件の種類を指定します。具体的な大きさは[[systems]]で指定します。 &amp;quot;Unlimited&amp;quot;: 境界条件を設定しません。シミュレーションボックスは無限大の大きさになります。 &amp;quot;PeriodicCuboid&amp;quot;: 直方体型の周期境界条件を指定します。 precision: 文字列型 シミュレーションに用いる浮動小数点数型の種類を指定します。 &amp;quot;float&amp;quot;: 32bit浮動小数点数を使用します。 &amp;quot;double&amp;quot;: 64bit浮動小数点数を使用します。 parallelism: 文字列型(省略可) 並列化する際の実装を選択します。 &amp;quot;OpenMP&amp;quot;: OpenMPを使った実装を使用します。 &amp;quot;sequencial&amp;quot;: 並列化を行いません。省略した場合はこれが選択されます。 seed: 整数型 乱数生成器の初期化に用いるシードを設定します。 delta_t: 浮動小数点数型 シミュレーションの時間刻みを指定します。 時間の単位は[units]で指定した単位系に依存します。 total_step: 整数型 実行するステップ数を指定します。 save_step: 整数型 何ステップおきに状態を出力するか指定します。 each_step: 整数型 何ステップおきに温度を変更するか指定します。 schedule: テーブル型 どのように温度を変更するか指定します。 integrator: テーブル型 時間積分の方法を指定します。積分方法によって必要なパラメータが異なります。 &amp;ldquo;BAOABLangevin&amp;rdquo; &amp;ldquo;g-BAOABLangevin&amp;rdquo; &amp;ldquo;UnderdampedLangevin&amp;rdquo; &amp;ldquo;VelocityVerlet&amp;rdquo; 参考：integrators.</description></item><item><title>SteepestDescent</title><link>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/simulators/SteepestDescentSimulator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/simulators/SteepestDescentSimulator/</guid><description>SteepestDescent # 最急降下法のためのシミュレータです。
systemを一つ、forcefieldを一つ要求します。
例 # [simulator] type = &amp;#34;SteepestDescent&amp;#34; boundary_type = &amp;#34;Unlimited&amp;#34; precision = &amp;#34;double&amp;#34; delta = 1e-4 threshold = 1e-4 step_limit = 1_000_000 save_step = 100 入力 # 以下のパラメータを取ります。
type: 文字列型 シミュレータの種類を指定します。このシミュレータを使う場合、&amp;quot;SteepestDescent&amp;quot;です。 boundary_type: 文字列型 境界条件の種類を指定します。具体的な大きさはSystemで指定します。 &amp;quot;Unlimited&amp;quot;: 境界条件を設定しません。シミュレーションボックスは無限大の大きさになります。 &amp;quot;PeriodicCuboid&amp;quot;: 直方体型の周期境界条件を指定します。 precision: 文字列型 シミュレーションに用いる浮動小数点数型の種類を指定します。 &amp;quot;float&amp;quot;: 32bit浮動小数点数を使用します。 &amp;quot;double&amp;quot;: 64bit浮動小数点数を使用します。 delta: 浮動小数点数型 一ステップで勾配の大きさのどれだけの割合だけ粒子を動かすかを指定します。 threshold: 浮動小数点数型 一ステップで最も大きく動いた粒子の動きがこれを下回った場合、収束したとして終了します。 step_limit: 整数型 ステップ数の上限を指定します。このステップ数に達すると、収束したかに関わらず終了します。 save_step: 整数型 何ステップおきに状態を出力するか指定します。 この値に関わらず、収束して終了した場合は最終状態が最終ステップとして出力されます。</description></item><item><title>SwitchingForceField</title><link>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/simulators/SwitchingForceFieldSimulator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/simulators/SwitchingForceFieldSimulator/</guid><description>SwitchingForceField # あらかじめ決めた時間ステップに使用する力場を変更するシミュレータです。
systemを一つ、forcefieldを複数個（必要なだけ）要求します。
Example # [simulator] type = &amp;#34;SwitchingForceField&amp;#34; boundary_type = &amp;#34;Unlimited&amp;#34; precision = &amp;#34;double&amp;#34; delta_t = 0.1 total_step = 3_000_000 save_step = 100 seed = 2374 integrator.type = &amp;#34;BAOABLangevin&amp;#34; integrator.parameters = [ {index = 0, gamma = 1.00}, {index = 1, gamma = 1.00}, ] schedule = [ {until = 1_000_000, forcefield = &amp;#34;close&amp;#34;}, {until = 2_000_000, forcefield = &amp;#34;open&amp;#34;}, {until = 3_000_000, forcefield = &amp;#34;close&amp;#34;}, ] [[forcefields]] name = &amp;#34;close&amp;#34; [[forcefields.</description></item><item><title>EnergyCalculation</title><link>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/simulators/EnergyCalculationSimulator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://mjolnir-md.github.io/Mjolnir/ja/docs/reference/simulators/EnergyCalculationSimulator/</guid><description>EnergyCalculation # トラジェクトリファイルからエネルギーを計算するシミュレータです。
ForceFieldを指定して、トラジェクトリファイルのそれぞれのスナップショットでのエネルギーを計算します。
このシミュレータにIntegratorは必要ありません。
また、[[systems]]で指定された座標はトラジェクトリファイルの座標で上書きされます。 ですが、グループや名前の指定のため、[[systems]]自体は必要です。
例 # [simulator] type = &amp;#34;EnergyCalculation&amp;#34; boundary_type = &amp;#34;PeriodicCuboid&amp;#34; precision = &amp;#34;double&amp;#34; parallelism = &amp;#34;OpenMP&amp;#34; # optional file = &amp;#34;example_position.dcd&amp;#34; 入力 # 以下のパラメータを取ります。
type: 文字列型 シミュレータの種類を指定します。このシミュレータを使う場合、&amp;quot;MolecularDynamics&amp;quot;です。 boundary_type: 文字列型 境界条件の種類を指定します。具体的な大きさは[[systems]]で指定します。 &amp;quot;Unlimited&amp;quot;: 境界条件を設定しません。シミュレーションボックスは無限大の大きさになります。 &amp;quot;PeriodicCuboid&amp;quot;: 直方体型の周期境界条件を指定します。 precision: 文字列型 シミュレーションに用いる浮動小数点数型の種類を指定します。 &amp;quot;float&amp;quot;: 32bit浮動小数点数を使用します。 &amp;quot;double&amp;quot;: 64bit浮動小数点数を使用します。 parallelism: 文字列型(省略可) 並列化する際の実装を選択します。 &amp;quot;OpenMP&amp;quot;: OpenMPを使った実装を使用します。 &amp;quot;sequencial&amp;quot;: 並列化を行いません。省略した場合はこれが選択されます。 file: 文字列型 エネルギーを計算するトラジェクトリファイルを指定します。 [files]で指定した入力パスに従います。</description></item></channel></rss>